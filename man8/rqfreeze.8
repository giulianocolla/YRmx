.TH rqfreeze 8 "Nov 21,2015" "YRMX" "YRMX System Suspend/Resume"
.SH NAME
rqfreeze \- freeze YRMX and give control to Linux
.SH SYNOPSIS
.fi
.B #include <ycore.h>
.sp
.BI "void rqfreeze(void)"
.fi
.SH DESCRIPTION
All YRMX interrupts are disabled, all tasks are removed from the ready
list, and the only task runnable is Linux.
The saved status is available to the proc fs, which may show all
relevant information.
It's useful for debug, and for termination, because all resources can
be removed without worrying about dependencies.
Calling rqfreeze with YRMX already frozen has no effect.
.sp
.SH "RETURN VALUE"
None. If called from within a task different from Linux, control
doesn't return to the task unless the system is subsequently unfrozen
(baked).
.sp
.SH "ERRORS"
None.
.sp
.SH "BUGS"
None I'm aware of, so far.
.SH "SEE ALSO"
.BR rqbake (8)